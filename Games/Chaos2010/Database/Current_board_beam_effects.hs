{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack48 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Current_board_beam_effects where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Current_board_beam_effects =
    Record (HCons (LVPair Queuepos (Expr (Maybe Int)))
            (HCons (LVPair Id (Expr (Maybe Int)))
             (HCons (LVPair Subtype (Expr (Maybe String)))
              (HCons (LVPair X1 (Expr (Maybe Int)))
               (HCons (LVPair Y1 (Expr (Maybe Int)))
                (HCons (LVPair X2 (Expr (Maybe Int)))
                 (HCons (LVPair Y2 (Expr (Maybe Int)))
                  (HCons (LVPair Ticks (Expr (Maybe Int))) HNil))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
current_board_beam_effects :: Table Current_board_beam_effects
current_board_beam_effects = baseTable "current_board_beam_effects"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Queuepos Field
---------------------------------------------------------------------------

data QueueposTag
type Queuepos = Proxy QueueposTag
instance ShowLabel Queuepos where showLabel _ = "queuepos"

queuepos :: Queuepos
queuepos = proxy

---------------------------------------------------------------------------
-- Id Field
---------------------------------------------------------------------------

data IdTag
type Id = Proxy IdTag
instance ShowLabel Id where showLabel _ = "id"

xid :: Id
xid = proxy

---------------------------------------------------------------------------
-- Subtype Field
---------------------------------------------------------------------------

data SubtypeTag
type Subtype = Proxy SubtypeTag
instance ShowLabel Subtype where showLabel _ = "subtype"

subtype :: Subtype
subtype = proxy

---------------------------------------------------------------------------
-- X1 Field
---------------------------------------------------------------------------

data X1Tag
type X1 = Proxy X1Tag
instance ShowLabel X1 where showLabel _ = "x1"

x1 :: X1
x1 = proxy

---------------------------------------------------------------------------
-- Y1 Field
---------------------------------------------------------------------------

data Y1Tag
type Y1 = Proxy Y1Tag
instance ShowLabel Y1 where showLabel _ = "y1"

y1 :: Y1
y1 = proxy

---------------------------------------------------------------------------
-- X2 Field
---------------------------------------------------------------------------

data X2Tag
type X2 = Proxy X2Tag
instance ShowLabel X2 where showLabel _ = "x2"

x2 :: X2
x2 = proxy

---------------------------------------------------------------------------
-- Y2 Field
---------------------------------------------------------------------------

data Y2Tag
type Y2 = Proxy Y2Tag
instance ShowLabel Y2 where showLabel _ = "y2"

y2 :: Y2
y2 = proxy

---------------------------------------------------------------------------
-- Ticks Field
---------------------------------------------------------------------------

data TicksTag
type Ticks = Proxy TicksTag
instance ShowLabel Ticks where showLabel _ = "ticks"

ticks :: Ticks
ticks = proxy
