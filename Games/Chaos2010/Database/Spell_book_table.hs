{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack54 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Spell_book_table where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Spell_book_table =
    Record (HCons (LVPair Spell_category (Expr (Maybe String)))
            (HCons (LVPair Spell_name (Expr (Maybe String)))
             (HCons (LVPair Count (Expr (Maybe Int)))
              (HCons (LVPair Chance (Expr (Maybe Int)))
               (HCons (LVPair Alignment (Expr (Maybe Int)))
                (HCons (LVPair Alignment_string (Expr (Maybe String)))
                 (HCons (LVPair Key (Expr (Maybe String)))
                  (HCons (LVPair Sprite (Expr (Maybe String)))
                   (HCons (LVPair Section_order (Expr (Maybe Int)))
                    (HCons (LVPair Alignment_order (Expr (Maybe Int)))
                     (HCons (LVPair Base_chance (Expr (Maybe Int)))
                      (HCons (LVPair Count_icons (Expr (Maybe String)))
                       (HCons (LVPair Align_icons (Expr (Maybe String)))
                        (HCons (LVPair Colour (Expr (Maybe String))) HNil))))))))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
spell_book_table :: Table Spell_book_table
spell_book_table = baseTable "spell_book_table"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Spell_category Field
---------------------------------------------------------------------------

data Spell_categoryTag
type Spell_category = Proxy Spell_categoryTag
instance ShowLabel Spell_category where
    showLabel _ = "spell_category"

spell_category :: Spell_category
spell_category = proxy

---------------------------------------------------------------------------
-- Spell_name Field
---------------------------------------------------------------------------

data Spell_nameTag
type Spell_name = Proxy Spell_nameTag
instance ShowLabel Spell_name where showLabel _ = "spell_name"

spell_name :: Spell_name
spell_name = proxy

---------------------------------------------------------------------------
-- Count Field
---------------------------------------------------------------------------

data CountTag
type Count = Proxy CountTag
instance ShowLabel Count where showLabel _ = "count"

count :: Count
count = proxy

---------------------------------------------------------------------------
-- Chance Field
---------------------------------------------------------------------------

data ChanceTag
type Chance = Proxy ChanceTag
instance ShowLabel Chance where showLabel _ = "chance"

chance :: Chance
chance = proxy

---------------------------------------------------------------------------
-- Alignment Field
---------------------------------------------------------------------------

data AlignmentTag
type Alignment = Proxy AlignmentTag
instance ShowLabel Alignment where showLabel _ = "alignment"

alignment :: Alignment
alignment = proxy

---------------------------------------------------------------------------
-- Alignment_string Field
---------------------------------------------------------------------------

data Alignment_stringTag
type Alignment_string = Proxy Alignment_stringTag
instance ShowLabel Alignment_string where
    showLabel _ = "alignment_string"

alignment_string :: Alignment_string
alignment_string = proxy

---------------------------------------------------------------------------
-- Key Field
---------------------------------------------------------------------------

data KeyTag
type Key = Proxy KeyTag
instance ShowLabel Key where showLabel _ = "key"

key :: Key
key = proxy

---------------------------------------------------------------------------
-- Sprite Field
---------------------------------------------------------------------------

data SpriteTag
type Sprite = Proxy SpriteTag
instance ShowLabel Sprite where showLabel _ = "sprite"

sprite :: Sprite
sprite = proxy

---------------------------------------------------------------------------
-- Section_order Field
---------------------------------------------------------------------------

data Section_orderTag
type Section_order = Proxy Section_orderTag
instance ShowLabel Section_order where
    showLabel _ = "section_order"

section_order :: Section_order
section_order = proxy

---------------------------------------------------------------------------
-- Alignment_order Field
---------------------------------------------------------------------------

data Alignment_orderTag
type Alignment_order = Proxy Alignment_orderTag
instance ShowLabel Alignment_order where
    showLabel _ = "alignment_order"

alignment_order :: Alignment_order
alignment_order = proxy

---------------------------------------------------------------------------
-- Base_chance Field
---------------------------------------------------------------------------

data Base_chanceTag
type Base_chance = Proxy Base_chanceTag
instance ShowLabel Base_chance where showLabel _ = "base_chance"

base_chance :: Base_chance
base_chance = proxy

---------------------------------------------------------------------------
-- Count_icons Field
---------------------------------------------------------------------------

data Count_iconsTag
type Count_icons = Proxy Count_iconsTag
instance ShowLabel Count_icons where showLabel _ = "count_icons"

count_icons :: Count_icons
count_icons = proxy

---------------------------------------------------------------------------
-- Align_icons Field
---------------------------------------------------------------------------

data Align_iconsTag
type Align_icons = Proxy Align_iconsTag
instance ShowLabel Align_icons where showLabel _ = "align_icons"

align_icons :: Align_icons
align_icons = proxy

---------------------------------------------------------------------------
-- Colour Field
---------------------------------------------------------------------------

data ColourTag
type Colour = Proxy ColourTag
instance ShowLabel Colour where showLabel _ = "colour"

colour :: Colour
colour = proxy
