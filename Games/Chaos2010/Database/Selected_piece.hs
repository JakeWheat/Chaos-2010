{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack45 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Selected_piece where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Selected_piece =
    Record (HCons (LVPair Ptype (Expr String))
            (HCons (LVPair Allegiance (Expr String))
             (HCons (LVPair Tag (Expr Int))
              (HCons (LVPair Move_phase (Expr String))
               (HCons (LVPair Engaged (Expr Bool)) HNil)))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
selected_piece :: Table Selected_piece
selected_piece = baseTable "selected_piece"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Ptype Field
---------------------------------------------------------------------------

data PtypeTag
type Ptype = Proxy PtypeTag
instance ShowLabel Ptype where showLabel _ = "ptype"

ptype :: Ptype
ptype = proxy

---------------------------------------------------------------------------
-- Allegiance Field
---------------------------------------------------------------------------

data AllegianceTag
type Allegiance = Proxy AllegianceTag
instance ShowLabel Allegiance where showLabel _ = "allegiance"

allegiance :: Allegiance
allegiance = proxy

---------------------------------------------------------------------------
-- Tag Field
---------------------------------------------------------------------------

data TagTag
type Tag = Proxy TagTag
instance ShowLabel Tag where showLabel _ = "tag"

tag :: Tag
tag = proxy

---------------------------------------------------------------------------
-- Move_phase Field
---------------------------------------------------------------------------

data Move_phaseTag
type Move_phase = Proxy Move_phaseTag
instance ShowLabel Move_phase where showLabel _ = "move_phase"

move_phase :: Move_phase
move_phase = proxy

---------------------------------------------------------------------------
-- Engaged Field
---------------------------------------------------------------------------

data EngagedTag
type Engaged = Proxy EngagedTag
instance ShowLabel Engaged where showLabel _ = "engaged"

engaged :: Engaged
engaged = proxy
