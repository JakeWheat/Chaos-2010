{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack49 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Monster_prototypes where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Monster_prototypes =
    Record (HCons (LVPair Ptype (Expr (Maybe String)))
            (HCons (LVPair Attack_strength (Expr (Maybe Int)))
             (HCons (LVPair Physical_defense (Expr (Maybe Int)))
              (HCons (LVPair Magic_defense (Expr (Maybe Int)))
               (HCons (LVPair Flying (Expr (Maybe Bool)))
                (HCons (LVPair Speed (Expr (Maybe Int)))
                 (HCons (LVPair Agility (Expr (Maybe Int)))
                  (HCons (LVPair Undead (Expr (Maybe Bool)))
                   (HCons (LVPair Ridable (Expr (Maybe Bool))) HNil)))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
monster_prototypes :: Table Monster_prototypes
monster_prototypes = baseTable "monster_prototypes"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Ptype Field
---------------------------------------------------------------------------

data PtypeTag
type Ptype = Proxy PtypeTag
instance ShowLabel Ptype where showLabel _ = "ptype"

ptype :: Ptype
ptype = proxy

---------------------------------------------------------------------------
-- Attack_strength Field
---------------------------------------------------------------------------

data Attack_strengthTag
type Attack_strength = Proxy Attack_strengthTag
instance ShowLabel Attack_strength where
    showLabel _ = "attack_strength"

attack_strength :: Attack_strength
attack_strength = proxy

---------------------------------------------------------------------------
-- Physical_defense Field
---------------------------------------------------------------------------

data Physical_defenseTag
type Physical_defense = Proxy Physical_defenseTag
instance ShowLabel Physical_defense where
    showLabel _ = "physical_defense"

physical_defense :: Physical_defense
physical_defense = proxy

---------------------------------------------------------------------------
-- Magic_defense Field
---------------------------------------------------------------------------

data Magic_defenseTag
type Magic_defense = Proxy Magic_defenseTag
instance ShowLabel Magic_defense where
    showLabel _ = "magic_defense"

magic_defense :: Magic_defense
magic_defense = proxy

---------------------------------------------------------------------------
-- Flying Field
---------------------------------------------------------------------------

data FlyingTag
type Flying = Proxy FlyingTag
instance ShowLabel Flying where showLabel _ = "flying"

flying :: Flying
flying = proxy

---------------------------------------------------------------------------
-- Speed Field
---------------------------------------------------------------------------

data SpeedTag
type Speed = Proxy SpeedTag
instance ShowLabel Speed where showLabel _ = "speed"

speed :: Speed
speed = proxy

---------------------------------------------------------------------------
-- Agility Field
---------------------------------------------------------------------------

data AgilityTag
type Agility = Proxy AgilityTag
instance ShowLabel Agility where showLabel _ = "agility"

agility :: Agility
agility = proxy

---------------------------------------------------------------------------
-- Undead Field
---------------------------------------------------------------------------

data UndeadTag
type Undead = Proxy UndeadTag
instance ShowLabel Undead where showLabel _ = "undead"

undead :: Undead
undead = proxy

---------------------------------------------------------------------------
-- Ridable Field
---------------------------------------------------------------------------

data RidableTag
type Ridable = Proxy RidableTag
instance ShowLabel Ridable where showLabel _ = "ridable"

ridable :: Ridable
ridable = proxy
