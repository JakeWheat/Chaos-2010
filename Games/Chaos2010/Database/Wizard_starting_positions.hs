{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack44 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Wizard_starting_positions where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Wizard_starting_positions =
    Record (HCons (LVPair Wizard_count (Expr Int))
            (HCons (LVPair Place (Expr Int))
             (HCons (LVPair X (Expr Int))
              (HCons (LVPair Y (Expr Int)) HNil))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
wizard_starting_positions :: Table Wizard_starting_positions
wizard_starting_positions = baseTable "wizard_starting_positions"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Wizard_count Field
---------------------------------------------------------------------------

data Wizard_countTag
type Wizard_count = Proxy Wizard_countTag
instance ShowLabel Wizard_count where showLabel _ = "wizard_count"

wizard_count :: Wizard_count
wizard_count = proxy

---------------------------------------------------------------------------
-- Place Field
---------------------------------------------------------------------------

data PlaceTag
type Place = Proxy PlaceTag
instance ShowLabel Place where showLabel _ = "place"

place :: Place
place = proxy

---------------------------------------------------------------------------
-- X Field
---------------------------------------------------------------------------

data XTag
type X = Proxy XTag
instance ShowLabel X where showLabel _ = "x"

x :: X
x = proxy

---------------------------------------------------------------------------
-- Y Field
---------------------------------------------------------------------------

data YTag
type Y = Proxy YTag
instance ShowLabel Y where showLabel _ = "y"

y :: Y
y = proxy
