{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack49 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Summon_spells where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Summon_spells =
    Record (HCons (LVPair Spell_name (Expr (Maybe String)))
            (HCons (LVPair Base_chance (Expr (Maybe Int)))
             (HCons (LVPair Alignment (Expr (Maybe Int)))
              (HCons (LVPair Spell_category (Expr (Maybe String)))
               (HCons (LVPair Description (Expr (Maybe String)))
                (HCons (LVPair Range (Expr (Maybe Int)))
                 (HCons (LVPair Numb (Expr (Maybe Int)))
                  (HCons (LVPair Valid_square_category (Expr (Maybe String)))
                   (HCons (LVPair Ptype (Expr (Maybe String))) HNil)))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
summon_spells :: Table Summon_spells
summon_spells = baseTable "summon_spells"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Spell_name Field
---------------------------------------------------------------------------

data Spell_nameTag
type Spell_name = Proxy Spell_nameTag
instance ShowLabel Spell_name where showLabel _ = "spell_name"

spell_name :: Spell_name
spell_name = proxy

---------------------------------------------------------------------------
-- Base_chance Field
---------------------------------------------------------------------------

data Base_chanceTag
type Base_chance = Proxy Base_chanceTag
instance ShowLabel Base_chance where showLabel _ = "base_chance"

base_chance :: Base_chance
base_chance = proxy

---------------------------------------------------------------------------
-- Alignment Field
---------------------------------------------------------------------------

data AlignmentTag
type Alignment = Proxy AlignmentTag
instance ShowLabel Alignment where showLabel _ = "alignment"

alignment :: Alignment
alignment = proxy

---------------------------------------------------------------------------
-- Spell_category Field
---------------------------------------------------------------------------

data Spell_categoryTag
type Spell_category = Proxy Spell_categoryTag
instance ShowLabel Spell_category where
    showLabel _ = "spell_category"

spell_category :: Spell_category
spell_category = proxy

---------------------------------------------------------------------------
-- Description Field
---------------------------------------------------------------------------

data DescriptionTag
type Description = Proxy DescriptionTag
instance ShowLabel Description where showLabel _ = "description"

description :: Description
description = proxy

---------------------------------------------------------------------------
-- Range Field
---------------------------------------------------------------------------

data RangeTag
type Range = Proxy RangeTag
instance ShowLabel Range where showLabel _ = "range"

range :: Range
range = proxy

---------------------------------------------------------------------------
-- Numb Field
---------------------------------------------------------------------------

data NumbTag
type Numb = Proxy NumbTag
instance ShowLabel Numb where showLabel _ = "numb"

numb :: Numb
numb = proxy

---------------------------------------------------------------------------
-- Valid_square_category Field
---------------------------------------------------------------------------

data Valid_square_categoryTag
type Valid_square_category = Proxy Valid_square_categoryTag
instance ShowLabel Valid_square_category where
    showLabel _ = "valid_square_category"

valid_square_category :: Valid_square_category
valid_square_category = proxy

---------------------------------------------------------------------------
-- Ptype Field
---------------------------------------------------------------------------

data PtypeTag
type Ptype = Proxy PtypeTag
instance ShowLabel Ptype where showLabel _ = "ptype"

ptype :: Ptype
ptype = proxy
