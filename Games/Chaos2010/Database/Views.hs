{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack49 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Views where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Views =
    Record (HCons (LVPair View_name (Expr (Maybe String)))
            (HCons (LVPair Table_catalog (Expr (Maybe String)))
             (HCons (LVPair Definition (Expr (Maybe String)))
              (HCons (LVPair Table_schema (Expr (Maybe String)))
               (HCons (LVPair Table_name (Expr (Maybe String)))
                (HCons (LVPair View_definition (Expr (Maybe String)))
                 (HCons (LVPair Check_option (Expr (Maybe String)))
                  (HCons (LVPair Is_updatable (Expr (Maybe String)))
                   (HCons (LVPair Is_insertable_into (Expr (Maybe String))) HNil)))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
views :: Table Views
views = baseTable "views"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- View_name Field
---------------------------------------------------------------------------

data View_nameTag
type View_name = Proxy View_nameTag
instance ShowLabel View_name where showLabel _ = "view_name"

view_name :: View_name
view_name = proxy

---------------------------------------------------------------------------
-- Table_catalog Field
---------------------------------------------------------------------------

data Table_catalogTag
type Table_catalog = Proxy Table_catalogTag
instance ShowLabel Table_catalog where
    showLabel _ = "table_catalog"

table_catalog :: Table_catalog
table_catalog = proxy

---------------------------------------------------------------------------
-- Definition Field
---------------------------------------------------------------------------

data DefinitionTag
type Definition = Proxy DefinitionTag
instance ShowLabel Definition where showLabel _ = "definition"

definition :: Definition
definition = proxy

---------------------------------------------------------------------------
-- Table_schema Field
---------------------------------------------------------------------------

data Table_schemaTag
type Table_schema = Proxy Table_schemaTag
instance ShowLabel Table_schema where showLabel _ = "table_schema"

table_schema :: Table_schema
table_schema = proxy

---------------------------------------------------------------------------
-- Table_name Field
---------------------------------------------------------------------------

data Table_nameTag
type Table_name = Proxy Table_nameTag
instance ShowLabel Table_name where showLabel _ = "table_name"

table_name :: Table_name
table_name = proxy

---------------------------------------------------------------------------
-- View_definition Field
---------------------------------------------------------------------------

data View_definitionTag
type View_definition = Proxy View_definitionTag
instance ShowLabel View_definition where
    showLabel _ = "view_definition"

view_definition :: View_definition
view_definition = proxy

---------------------------------------------------------------------------
-- Check_option Field
---------------------------------------------------------------------------

data Check_optionTag
type Check_option = Proxy Check_optionTag
instance ShowLabel Check_option where showLabel _ = "check_option"

check_option :: Check_option
check_option = proxy

---------------------------------------------------------------------------
-- Is_updatable Field
---------------------------------------------------------------------------

data Is_updatableTag
type Is_updatable = Proxy Is_updatableTag
instance ShowLabel Is_updatable where showLabel _ = "is_updatable"

is_updatable :: Is_updatable
is_updatable = proxy

---------------------------------------------------------------------------
-- Is_insertable_into Field
---------------------------------------------------------------------------

data Is_insertable_intoTag
type Is_insertable_into = Proxy Is_insertable_intoTag
instance ShowLabel Is_insertable_into where
    showLabel _ = "is_insertable_into"

is_insertable_into :: Is_insertable_into
is_insertable_into = proxy
