{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack43 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Spell_valid_squares where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Spell_valid_squares =
    Record (HCons (LVPair Valid_square_category (Expr (Maybe String)))
            (HCons (LVPair X (Expr (Maybe Int)))
             (HCons (LVPair Y (Expr (Maybe Int))) HNil)))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
spell_valid_squares :: Table Spell_valid_squares
spell_valid_squares = baseTable "spell_valid_squares"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Valid_square_category Field
---------------------------------------------------------------------------

data Valid_square_categoryTag
type Valid_square_category = Proxy Valid_square_categoryTag
instance ShowLabel Valid_square_category where
    showLabel _ = "valid_square_category"

valid_square_category :: Valid_square_category
valid_square_category = proxy

---------------------------------------------------------------------------
-- X Field
---------------------------------------------------------------------------

data XTag
type X = Proxy XTag
instance ShowLabel X where showLabel _ = "x"

x :: X
x = proxy

---------------------------------------------------------------------------
-- Y Field
---------------------------------------------------------------------------

data YTag
type Y = Proxy YTag
instance ShowLabel Y where showLabel _ = "y"

y :: Y
y = proxy
