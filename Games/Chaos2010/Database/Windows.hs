{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack46 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Windows where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Windows =
    Record (HCons (LVPair Window_name (Expr String))
            (HCons (LVPair Px (Expr Int))
             (HCons (LVPair Py (Expr Int))
              (HCons (LVPair Sx (Expr Int))
               (HCons (LVPair Sy (Expr Int))
                (HCons (LVPair State (Expr String)) HNil))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
windows :: Table Windows
windows = baseTable "windows"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Window_name Field
---------------------------------------------------------------------------

data Window_nameTag
type Window_name = Proxy Window_nameTag
instance ShowLabel Window_name where showLabel _ = "window_name"

window_name :: Window_name
window_name = proxy

---------------------------------------------------------------------------
-- Px Field
---------------------------------------------------------------------------

data PxTag
type Px = Proxy PxTag
instance ShowLabel Px where showLabel _ = "px"

px :: Px
px = proxy

---------------------------------------------------------------------------
-- Py Field
---------------------------------------------------------------------------

data PyTag
type Py = Proxy PyTag
instance ShowLabel Py where showLabel _ = "py"

py :: Py
py = proxy

---------------------------------------------------------------------------
-- Sx Field
---------------------------------------------------------------------------

data SxTag
type Sx = Proxy SxTag
instance ShowLabel Sx where showLabel _ = "sx"

sx :: Sx
sx = proxy

---------------------------------------------------------------------------
-- Sy Field
---------------------------------------------------------------------------

data SyTag
type Sy = Proxy SyTag
instance ShowLabel Sy where showLabel _ = "sy"

sy :: Sy
sy = proxy

---------------------------------------------------------------------------
-- State Field
---------------------------------------------------------------------------

data StateTag
type State = Proxy StateTag
instance ShowLabel State where showLabel _ = "state"

state :: State
state = proxy
