{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack50 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Current_wizard_selected_spell_details where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Current_wizard_selected_spell_details =
    Record (HCons (LVPair Spell_name (Expr (Maybe String)))
            (HCons (LVPair Spell_category (Expr (Maybe String)))
             (HCons (LVPair Sprite (Expr (Maybe String)))
              (HCons (LVPair Base_chance (Expr (Maybe Int)))
               (HCons (LVPair Description (Expr (Maybe String)))
                (HCons (LVPair Numb (Expr (Maybe Int)))
                 (HCons (LVPair Range (Expr (Maybe Int)))
                  (HCons (LVPair Count (Expr (Maybe Int)))
                   (HCons (LVPair Chance (Expr (Maybe Int)))
                    (HCons (LVPair Alignment_string (Expr (Maybe String))) HNil))))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
current_wizard_selected_spell_details :: Table
    Current_wizard_selected_spell_details
current_wizard_selected_spell_details = baseTable "current_wizard_selected_spell_details"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Spell_name Field
---------------------------------------------------------------------------

data Spell_nameTag
type Spell_name = Proxy Spell_nameTag
instance ShowLabel Spell_name where showLabel _ = "spell_name"

spell_name :: Spell_name
spell_name = proxy

---------------------------------------------------------------------------
-- Spell_category Field
---------------------------------------------------------------------------

data Spell_categoryTag
type Spell_category = Proxy Spell_categoryTag
instance ShowLabel Spell_category where
    showLabel _ = "spell_category"

spell_category :: Spell_category
spell_category = proxy

---------------------------------------------------------------------------
-- Sprite Field
---------------------------------------------------------------------------

data SpriteTag
type Sprite = Proxy SpriteTag
instance ShowLabel Sprite where showLabel _ = "sprite"

sprite :: Sprite
sprite = proxy

---------------------------------------------------------------------------
-- Base_chance Field
---------------------------------------------------------------------------

data Base_chanceTag
type Base_chance = Proxy Base_chanceTag
instance ShowLabel Base_chance where showLabel _ = "base_chance"

base_chance :: Base_chance
base_chance = proxy

---------------------------------------------------------------------------
-- Description Field
---------------------------------------------------------------------------

data DescriptionTag
type Description = Proxy DescriptionTag
instance ShowLabel Description where showLabel _ = "description"

description :: Description
description = proxy

---------------------------------------------------------------------------
-- Numb Field
---------------------------------------------------------------------------

data NumbTag
type Numb = Proxy NumbTag
instance ShowLabel Numb where showLabel _ = "numb"

numb :: Numb
numb = proxy

---------------------------------------------------------------------------
-- Range Field
---------------------------------------------------------------------------

data RangeTag
type Range = Proxy RangeTag
instance ShowLabel Range where showLabel _ = "range"

range :: Range
range = proxy

---------------------------------------------------------------------------
-- Count Field
---------------------------------------------------------------------------

data CountTag
type Count = Proxy CountTag
instance ShowLabel Count where showLabel _ = "count"

count :: Count
count = proxy

---------------------------------------------------------------------------
-- Chance Field
---------------------------------------------------------------------------

data ChanceTag
type Chance = Proxy ChanceTag
instance ShowLabel Chance where showLabel _ = "chance"

chance :: Chance
chance = proxy

---------------------------------------------------------------------------
-- Alignment_string Field
---------------------------------------------------------------------------

data Alignment_stringTag
type Alignment_string = Proxy Alignment_stringTag
instance ShowLabel Alignment_string where
    showLabel _ = "alignment_string"

alignment_string :: Alignment_string
alignment_string = proxy
