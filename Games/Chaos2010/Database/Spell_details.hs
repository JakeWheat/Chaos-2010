{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack59 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module Games.Chaos2010.Database.Spell_details where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Spell_details =
    Record (HCons (LVPair Spell_name (Expr (Maybe String)))
            (HCons (LVPair Base_chance (Expr (Maybe Int)))
             (HCons (LVPair Alignment (Expr (Maybe Int)))
              (HCons (LVPair Spell_category (Expr (Maybe String)))
               (HCons (LVPair Description (Expr (Maybe String)))
                (HCons (LVPair Range (Expr (Maybe Int)))
                 (HCons (LVPair Numb (Expr (Maybe Int)))
                  (HCons (LVPair Valid_square_category (Expr (Maybe String)))
                   (HCons (LVPair Ptype (Expr (Maybe String)))
                    (HCons (LVPair Sprite (Expr (Maybe String)))
                     (HCons (LVPair Count (Expr (Maybe Int)))
                      (HCons (LVPair Chance (Expr (Maybe Int)))
                       (HCons (LVPair Alignment_string (Expr (Maybe String)))
                        (HCons (LVPair Key (Expr (Maybe String)))
                         (HCons (LVPair Section_order (Expr (Maybe Int)))
                          (HCons (LVPair Alignment_order (Expr (Maybe Int)))
                           (HCons (LVPair Count_icons (Expr (Maybe String)))
                            (HCons (LVPair Align_icons (Expr (Maybe String)))
                             (HCons (LVPair Colour (Expr (Maybe String))) HNil)))))))))))))))))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
spell_details :: Table Spell_details
spell_details = baseTable "spell_details"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Spell_name Field
---------------------------------------------------------------------------

data Spell_nameTag
type Spell_name = Proxy Spell_nameTag
instance ShowLabel Spell_name where showLabel _ = "spell_name"

spell_name :: Spell_name
spell_name = proxy

---------------------------------------------------------------------------
-- Base_chance Field
---------------------------------------------------------------------------

data Base_chanceTag
type Base_chance = Proxy Base_chanceTag
instance ShowLabel Base_chance where showLabel _ = "base_chance"

base_chance :: Base_chance
base_chance = proxy

---------------------------------------------------------------------------
-- Alignment Field
---------------------------------------------------------------------------

data AlignmentTag
type Alignment = Proxy AlignmentTag
instance ShowLabel Alignment where showLabel _ = "alignment"

alignment :: Alignment
alignment = proxy

---------------------------------------------------------------------------
-- Spell_category Field
---------------------------------------------------------------------------

data Spell_categoryTag
type Spell_category = Proxy Spell_categoryTag
instance ShowLabel Spell_category where
    showLabel _ = "spell_category"

spell_category :: Spell_category
spell_category = proxy

---------------------------------------------------------------------------
-- Description Field
---------------------------------------------------------------------------

data DescriptionTag
type Description = Proxy DescriptionTag
instance ShowLabel Description where showLabel _ = "description"

description :: Description
description = proxy

---------------------------------------------------------------------------
-- Range Field
---------------------------------------------------------------------------

data RangeTag
type Range = Proxy RangeTag
instance ShowLabel Range where showLabel _ = "range"

range :: Range
range = proxy

---------------------------------------------------------------------------
-- Numb Field
---------------------------------------------------------------------------

data NumbTag
type Numb = Proxy NumbTag
instance ShowLabel Numb where showLabel _ = "numb"

numb :: Numb
numb = proxy

---------------------------------------------------------------------------
-- Valid_square_category Field
---------------------------------------------------------------------------

data Valid_square_categoryTag
type Valid_square_category = Proxy Valid_square_categoryTag
instance ShowLabel Valid_square_category where
    showLabel _ = "valid_square_category"

valid_square_category :: Valid_square_category
valid_square_category = proxy

---------------------------------------------------------------------------
-- Ptype Field
---------------------------------------------------------------------------

data PtypeTag
type Ptype = Proxy PtypeTag
instance ShowLabel Ptype where showLabel _ = "ptype"

ptype :: Ptype
ptype = proxy

---------------------------------------------------------------------------
-- Sprite Field
---------------------------------------------------------------------------

data SpriteTag
type Sprite = Proxy SpriteTag
instance ShowLabel Sprite where showLabel _ = "sprite"

sprite :: Sprite
sprite = proxy

---------------------------------------------------------------------------
-- Count Field
---------------------------------------------------------------------------

data CountTag
type Count = Proxy CountTag
instance ShowLabel Count where showLabel _ = "count"

count :: Count
count = proxy

---------------------------------------------------------------------------
-- Chance Field
---------------------------------------------------------------------------

data ChanceTag
type Chance = Proxy ChanceTag
instance ShowLabel Chance where showLabel _ = "chance"

chance :: Chance
chance = proxy

---------------------------------------------------------------------------
-- Alignment_string Field
---------------------------------------------------------------------------

data Alignment_stringTag
type Alignment_string = Proxy Alignment_stringTag
instance ShowLabel Alignment_string where
    showLabel _ = "alignment_string"

alignment_string :: Alignment_string
alignment_string = proxy

---------------------------------------------------------------------------
-- Key Field
---------------------------------------------------------------------------

data KeyTag
type Key = Proxy KeyTag
instance ShowLabel Key where showLabel _ = "key"

key :: Key
key = proxy

---------------------------------------------------------------------------
-- Section_order Field
---------------------------------------------------------------------------

data Section_orderTag
type Section_order = Proxy Section_orderTag
instance ShowLabel Section_order where
    showLabel _ = "section_order"

section_order :: Section_order
section_order = proxy

---------------------------------------------------------------------------
-- Alignment_order Field
---------------------------------------------------------------------------

data Alignment_orderTag
type Alignment_order = Proxy Alignment_orderTag
instance ShowLabel Alignment_order where
    showLabel _ = "alignment_order"

alignment_order :: Alignment_order
alignment_order = proxy

---------------------------------------------------------------------------
-- Count_icons Field
---------------------------------------------------------------------------

data Count_iconsTag
type Count_icons = Proxy Count_iconsTag
instance ShowLabel Count_icons where showLabel _ = "count_icons"

count_icons :: Count_icons
count_icons = proxy

---------------------------------------------------------------------------
-- Align_icons Field
---------------------------------------------------------------------------

data Align_iconsTag
type Align_icons = Proxy Align_iconsTag
instance ShowLabel Align_icons where showLabel _ = "align_icons"

align_icons :: Align_icons
align_icons = proxy

---------------------------------------------------------------------------
-- Colour Field
---------------------------------------------------------------------------

data ColourTag
type Colour = Proxy ColourTag
instance ShowLabel Colour where showLabel _ = "colour"

colour :: Colour
colour = proxy
